@model IEnumerable<AppData.LoaiPhong>

@{
	ViewData["Title"] = "Index";
}

<table class="table mb-1">
	<thead>
		<tr>
			<th class="text-start">Quản lý loại phòng vô hiệu hóa</th>
		</tr>
	</thead>
</table>


<div class="table-scrollable">
	<table class="table table-bordered ">
		<thead>
			<tr>
				<th class="text-center" style="color: black">
					Tên
				</th>
				<th class="text-center" style="color: black">
					Hình ảnh
				</th>
				<th class="text-center" style="color: black">
					Giá gốc
				</th>
				<th class="text-center" style="color: black">
					Giá đã giảm
				</th>
				<th class="text-center " style="color: black">
					Trạng thái
				</th>
				<th class="text-center" style="color: black">
					Số phòng còn
				</th>
				<th class="text-center " style="color: black">
					Hành động
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td style="color: black">@Html.DisplayFor(modelItem => item.TenLoaiPhong)</td>
					<td class="text-center">
						<img src="~/img/room/@item.Anh" alt="Image" class="img-fluid" style="max-width: 100px;" />

					</td>
					<td style="color: black; text-align: center; font-weight: bold; font-size: 16px;">
						@String.Format("{0:N0}", item.GiaGoc)
					</td>
					<td style="color: black; text-align: center; font-weight: bold; font-size: 16px;">
						@String.Format("{0:N0}", item.GiaGiamGia)
					</td>

					<td class="text-center">
						@if (item.TrangThai)
						{
							<span class="badge badge-success">Hoạt động</span>
						}
						else
						{
							<span class="badge badge-secondary">Không hoạt động</span>
						}
					</td>
					<td style="color: black">@Html.DisplayFor(modelItem => item.SoPhongCon)</td>
					<td class="text-center">
						<div class="d-inline">
							<!-- Sử dụng class d-inline để hiển thị chúng trên cùng một dòng -->
							<form asp-action="KhoiPhuc" asp-controller="LoaiPhongVHH" asp-route-ID="@item.MaLoaiPhong" method="post" onsubmit="return confirmDelete();" style="display:inline;">
								<!-- Thêm style để không chiếm dòng mới -->
								<button class="btn btn-danger btn-sm" type="submit"><i class="fa fa-trash-o" aria-hidden="true"></i></button>
							</form>
						</div>


					</td>
				</tr>
			}
		</tbody>
	</table>

</div>
<script>
	function confirmDelete() {
					return confirm('Bạn có chắc chắn muốn khôi phục không?'); // Hiển thị hộp thoại xác nhận
	}
</script>
<style>
	.btn-create {
		background-color: #17a2b8;
		color: white;
	}

		.btn-create:hover {
			background-color: #138496;
			color: white;
		}

	.pagination {
		display: flex;
		justify-content: center; /* Căn giữa */
		margin: 20px 0; /* Khoảng cách trên và dưới */
	}

		.pagination a {
			padding: 10px 15px; /* Khoảng cách bên trong */
			margin: 0 5px; /* Khoảng cách giữa các liên kết */
			text-decoration: none; /* Bỏ gạch chân */
			color: #ffffff; /* Màu chữ trắng */
			background-color: #00B2B2; /* Màu nền teal */
			border: 1px solid #00B2B2; /* Đường viền màu teal */
			border-radius: 5px; /* Bo góc */
			transition: background-color 0.3s, color 0.3s; /* Hiệu ứng chuyển đổi */
		}

			.pagination a:hover {
				background-color: #008B8B; /* Màu nền khi hover (màu tối hơn) */
				color: #ffffff; /* Màu chữ trắng khi hover */
			}

		.pagination .active {
			background-color: #008B8B; /* Màu nền cho trang hiện tại (màu tối hơn) */
			color: white; /* Màu chữ cho trang hiện tại */
			border: 1px solid #006666; /* Đường viền cho trang hiện tại (màu tối hơn) */
		}
</style>



@section Scripts {
	@{
		await Html.RenderPartialAsync("_ValidationScriptsPartial");
	}
}
